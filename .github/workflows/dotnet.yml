# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: "Build"
permissions:
  actions: write
  contents: write

env:
  VERSION: 1.0.${{ github.run_number }}
  NUGET_REPO_URL: 'https://api.nuget.org/v3/index.json'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Sets environment variables - branch-name
      uses: nelonoel/branch-name@v1.0.1
    - name: Sets environment variables - Nerdbank.GitVersioning
      uses: dotnet/nbgv@master
      with:
        setAllVars: true

    - name: Update Version
      run: ((Get-Content -Path source.extension.vsixmanifest -Raw) -Replace "1.0.0", "${{ env.VERSION }}") | Set-Content -Path source.extension.vsixmanifest
      working-directory: NoVar
      shell: pwsh
        
    - name: Restore
      run: dotnet restore NoVarExtension.sln

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.3

    - name: Build
      run: msbuild NoVarExtension.sln /property:Configuration=Release /t:Rebuild

    - name: Move build output
      run: mv bin/Release/NoVar.vsix NoVar-${{ env.VERSION }}.vsix
      working-directory: NoVar

    - name: Publish artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Visual Studio Extension
        path: Novar/*.vsix

  Tag:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Create tag
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/${{ env.VERSION }}",
            sha: context.sha
          })
    - name: Create release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: v${{ env.VERSION }}
        draft: true
        prerelease: false
    - uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: Upload VSIX asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: artifacts/Visual Studio Extension/NoVar-${{ env.VERSION }}.vsix
        asset_name: NoVar-${{ env.VERSION }}.vsix
        asset_content_type: application/zip
